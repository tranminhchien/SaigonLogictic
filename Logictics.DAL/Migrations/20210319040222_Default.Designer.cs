// <auto-generated />
using System;
using Logictics.DAL.EFContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Logictics.DAL.Migrations
{
    [DbContext(typeof(LogicticsDbContext))]
    [Migration("20210319040222_Default")]
    partial class Default
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Logictics.Entity.Models.CategoryProductTbl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<double?>("CreateDate")
                        .HasColumnType("double");

                    b.Property<double?>("ModifyDate")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CategoryProductTbl");
                });

            modelBuilder.Entity("Logictics.Entity.Models.OrderDetailTbl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<double?>("CreateDate")
                        .HasColumnType("double");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("ModifyDate")
                        .HasColumnType("double");

                    b.Property<string>("OrderId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategoryId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("Quality")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderDetailTbl");
                });

            modelBuilder.Entity("Logictics.Entity.Models.OrderTbl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<double?>("CreateDate")
                        .HasColumnType("double");

                    b.Property<string>("CustomerConfirmId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("ModifyDate")
                        .HasColumnType("double");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("PickupDate")
                        .HasColumnType("double");

                    b.Property<string>("RecipientId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SenderId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Shipment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StoreId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TotalWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderTbl");
                });

            modelBuilder.Entity("Logictics.Entity.Models.StoreTbl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<double?>("CreateDate")
                        .HasColumnType("double");

                    b.Property<double?>("ModifyDate")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("StoreTbl");
                });

            modelBuilder.Entity("Logictics.Entity.Models.UserAdmin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("CreateDate")
                        .HasColumnType("double");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double?>("ModifyDate")
                        .HasColumnType("double");

                    b.Property<string>("PassWord")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("UserAdmin");

                    b.HasData(
                        new
                        {
                            Id = "69bd714f-9576-45ba-b5b7-f00649be00de",
                            PassWord = "7c4a8d9ca3762af61e59520943dc26494f8941b",
                            Role = "ADMIN",
                            Status = "ACTIVE",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "69bd714f-9576-45ba-b5b7-f00649be00df",
                            CreateDate = 1.0,
                            PassWord = "7c4a8d9ca3762af61e59520943dc26494f8941b",
                            Role = "CLIENT",
                            Status = "ACTIVE",
                            UserName = "ChienClient"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
