@model Logictics.Service.ViewModel.OrderEditViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@section extendCSS{
    <style>
        .productDetailInput input {
            margin-left: 15px;
        }

        .smallInput {
            width: 85px;
        }

        .mediumInput {
            width: 160px;
        }

        .largeInput {
            width: 242px;
        }

        .productDetailInput .btnAddOrderDetail {
            width: 85px;
            margin-left: 30px;
            padding: 0px 10px;
        }

        .btnAddOrder {
            padding: 0px 15px;
        }

        .orderInput div {
            margin-right: 15px;
        }

        .btn-custom-violet {
            color: #ffffff;
            background-color: blueviolet;
            border-color: blueviolet;
            box-shadow: none;
        }

            .btn-custom-violet:hover {
                color: #ffffff;
                background-color: blueviolet;
                border-color: blueviolet;
            }

            .btn-custom-violet:focus, .btn-custom-violet.focus {
                color: #ffffff;
                background-color: blueviolet;
                border-color: blueviolet;
                box-shadow: none, 0 0 0 0 rgba(72, 180, 97, 0.5);
            }

            .btn-custom-violet.disabled, .btn-custom-violet:disabled {
                color: #ffffff;
                background-color: blueviolet;
                border-color: blueviolet;
            }

            .btn-custom-violet:not(:disabled):not(.disabled):active, .btn-custom-violet:not(:disabled):not(.disabled).active,
            .show > .btn-custom-violet.dropdown-toggle {
                color: #ffffff;
                background-color: blueviolet;
                border-color: blueviolet;
            }

                .btn-custom-violet:not(:disabled):not(.disabled):active:focus, .btn-custom-violet:not(:disabled):not(.disabled).active:focus,
                .show > .btn-custom-violet.dropdown-toggle:focus {
                    box-shadow: 0 0 0 0 rgba(72, 180, 97, 0.5);
                }
    </style>
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">Edit</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="~/User/Index">Trang chủ</a></li>
                        <li class="breadcrumb-item active">Order</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <!-- Main row -->
        <div class="row">
            <div class="col-sm-12">
                <!-- /.card -->
                <div class="card">
                    <div class="card-header">
                        <div class="input-group d-flex align-items-center">
                            <a href="/Admin/Order/Index">Quay Về</a>
                        </div>
                    </div>

                    <div class="card-body d-flex productDetailInput">
                        @Html.DropDownList("ListCategory", null, null, new { @class = "form-control form-control-sm selectpicker", @data_live_search = "true", @data_size = "5" })
                        <input type="text" placeholder="Product Code" id="productCode" name="productCode" value="" class="form-control form-control-sm" />
                        <input type="text" placeholder="Description" id="description" name="description" value="" class="form-control form-control-sm" />
                        <input type="number" placeholder="Quality" id="quality" name="quality" value="" class="form-control form-control-sm smallInput" />
                        <input type="number" placeholder="Weight" id="weight" name="weight" value="" class="form-control form-control-sm smallInput" />
                        <input type="number" placeholder="Price" id="price" name="price" value="" class="form-control form-control-sm smallInput" />
                        <button class="btnAddOrderDetail btn btn-success" id="btnAddOrderDetail">
                            <i class="fas fa-plus-circle">&nbsp;Add</i>
                        </button>
                    </div>

                    <div class="card-body">
                        <table id="example1" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>OrderDetailId</th>
                                    <th>CategoryId</th>
                                    <th>Category</th>
                                    <th>ProductCode</th>
                                    <th>Description</th>
                                    <th>Quality</th>
                                    <th>Weight</th>
                                    <th>Price</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>

                    <div class="card-body d-flex orderInput">
                        <div>
                            <div>Store</div>
                            @Html.DropDownList("ListStore", null, null, new { @class = "form-control form-control-sm selectpicker largeInput", @data_live_search = "true", @data_size = "5" })
                        </div>
                        <div>
                            <div>Total Weight</div>
                            <input type="number" placeholder="Total Weight" id="totalWeight" name="totalWeight" value="@Model.orderTbl.TotalWeight" class="form-control form-control-sm smallInput" disabled />
                        </div>
                        <div>
                            <div>Shipment</div>
                            <input type="text" placeholder="Shipment" id="shipment" name="shipment" value="@Model.orderTbl.Shipment" class="form-control form-control-sm mediumInput" />
                        </div>
                        <div>
                            <div>Sender Name</div>
                            @Html.DropDownList("ListSender", null, null, new { @class = "form-control form-control-sm selectpicker largeInput", @data_live_search = "true", @data_size = "5" })
                        </div>
                        <div>
                            <div>Recipient Name</div>
                            @Html.DropDownList("ListRecipient", null, null, new { @class = "form-control form-control-sm selectpicker largeInput", @data_live_search = "true", @data_size = "5" })
                        </div>
                    </div>

                    <div class="card-body d-flex orderInput">
                        <div>
                            <div>Note</div>
                            <textarea id="note" name="note" rows="4" cols="50">@Model.orderTbl.Notes</textarea>
                        </div>
                        <div>
                            <div>
                                Status
                            </div>
                            <div>
                                @Html.DropDownList("ListStatus", null, null, new { @class = "form-control form-control-sm selectpicker" })
                            </div>
                        </div>
                        <div>
                            <div>&nbsp;</div>
                            <button class="btnAddOrder btn btn-custom-violet" id="btnAddOrder">
                                Update Order
                            </button>
                        </div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.row (main row) -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
nuơ
@section extendScripts{

    <script>
        var order = @Html.Raw(Json.Serialize(Model));
        var table = $('#example1').DataTable({
            "searching": false,
            "paging": false,
            "ordering": false,
            "info": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                },
                {
                    "targets": [1],
                    "visible": false
                }
            ],
            "columns": [
                { data: null, "render": 'id' },
                { data: null, "render": 'productCategoryId' },
                {
                    data: null, "render": function (data, type, full, meta) {
                        return getNameCategoryById(order.listCategoryTbl, data.productCategoryId);
                    }
                },
                { data: null, "render": 'productCode' },
                { data: null, "render": 'description' },
                { data: null, "render": 'quality' },
                { data: null, "render": 'weight' },
                { data: null, "render": 'price' },
                {
                    data: null, "render": function (data, type, full, meta) {
                        return "<button type=\"button\"><div class=\"deleteOrderdetail\">Remove</button>";
                    }
                }
            ]
        });
        $(function () {
            table.rows.add(order.listDetailTbl).draw();
        });

        function getNameCategoryById(arr, id) {
            var x = "NoName";
            $.each(arr, function (index, value) {
                if (value.id == id) {
                    x = value.name;
                }
            });

            return x;
        }

        //TODO add function remove kanjidetail
        $("#btnAddOrderDetail").click(function () {
            var productCategoryId = $("#ListCategory").val();
            var category = $("#ListCategory option:selected").text();
            var productCode = $("#productCode").val();
            var description = $("#description").val();
            var quality = $("#quality").val();
            var weight = $("#weight").val();
            var price = $("#price").val();
            var id = '';

            var data = {
                id,
                productCategoryId,
                category,
                productCode,
                description,
                quality,
                weight,
                price
            }

            var oldTotal = $("#totalWeight").val();
            if (oldTotal == undefined || oldTotal == "" || oldTotal == null) {
                oldTotal = 0;
            }

            var newTotal = parseInt(oldTotal) + parseInt(weight) * parseInt(quality);
            $("#totalWeight").val(newTotal)
            table.row.add(data);
            table.draw();
            order.listDetailTbl.push(data);
        });

        $("#btnAddOrder").click(function () {
            var Id = order.orderTbl.id;
            var StoreId = $("#ListStore").val();
            var SenderId = $("#ListSender").val();
            var RecipientId = $("#ListRecipient").val();
            var TotalWeight = $("#totalWeight").val();
            var Shipment = $("#shipment").val();
            var Note = $("#note").val();
            var status = $("#ListStatus").val();
            console.log(Id);
            $.ajax({
                url: "/Admin/Order/Edit",
                type: "POST",
                data: {
                    StoreId: StoreId,
                    SenderId: SenderId,
                    RecipientId: RecipientId,
                    Shipment: Shipment,
                    TotalWeight: TotalWeight,
                    Note: Note,
                    listOrdertail: table.data().toArray(),
                    status,
                    Id
                },
                dataType: "JSON",
                success: function (response) {
                    window.location.href = "/Admin/Order";
                }
            });
        });

        //delete row datatable
        $('#example1 tbody').on('click', 'div.deleteOrderdetail', function () {
            var rowIndex = $(this).parents('tr')[0]['rowIndex'];
            var weight = table.data()[rowIndex - 1]['weight'];
            var quality = table.data()[rowIndex - 1]['quality'];

            var oldTotal = $("#totalWeight").val();
            if (oldTotal == undefined || oldTotal == "" || oldTotal == null) {
                oldTotal = 0;
            }

            var newTotal = parseInt(oldTotal) - parseInt(weight) * parseInt(quality);
            $("#totalWeight").val(newTotal);
            table
                .row(rowIndex - 1)
                .remove()
                .draw();
        });
    </script>
}